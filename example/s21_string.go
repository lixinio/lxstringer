// Code generated by "stringer -type=S21,S22 example/s2.go"; DO NOT EDIT.

package example

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[S21_1-0]
	_ = x[S21_2-1]
	_ = x[S21_3-2]
}

const (
	_S21CodeName = "A AFD SAFF发 生"
	_S21Name     = "aaabbbccc"
)

var (
	_S21CodeIndex = [...]uint8{0, 3, 9, 17}
	_S21NameIndex = [...]uint8{0, 3, 6, 9}
)

func (i S21) Code() string {
	if i < 0 || i >= S21(len(_S21CodeIndex)-1) {
		return "S21(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _S21CodeName[_S21CodeIndex[i]:_S21CodeIndex[i+1]]
}

func (i S21) Name() string {
	if i < 0 || i >= S21(len(_S21NameIndex)-1) {
		return "S21(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _S21Name[_S21NameIndex[i]:_S21NameIndex[i+1]]
}

var _S21Code2IDMap = map[string]S21{
	_S21CodeName[0:3]:  0,
	_S21CodeName[3:9]:  1,
	_S21CodeName[9:17]: 2,
}

func CodeToS21(code string, dftVal S21) S21 {
	if val, ok := _S21Code2IDMap[code]; ok {
		return val
	}
	return dftVal
}

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[S22_1-100]
	_ = x[S22_2-101]
	_ = x[S22_3-102]
}

const (
	_S22CodeName = "A b C中 华啊`啊"
	_S22Name     = "d E f人 们i'm ok"
)

var (
	_S22CodeIndex = [...]uint8{0, 5, 12, 19}
	_S22NameIndex = [...]uint8{0, 5, 12, 18}
)

func (i S22) Code() string {
	i -= 100
	if i < 0 || i >= S22(len(_S22CodeIndex)-1) {
		return "S22(" + strconv.FormatInt(int64(i+100), 10) + ")"
	}
	return _S22CodeName[_S22CodeIndex[i]:_S22CodeIndex[i+1]]
}

func (i S22) Name() string {
	i -= 100
	if i < 0 || i >= S22(len(_S22NameIndex)-1) {
		return "S22(" + strconv.FormatInt(int64(i+100), 10) + ")"
	}
	return _S22Name[_S22NameIndex[i]:_S22NameIndex[i+1]]
}

var _S22Code2IDMap = map[string]S22{
	_S22CodeName[0:5]:   100,
	_S22CodeName[5:12]:  101,
	_S22CodeName[12:19]: 102,
}

func CodeToS22(code string, dftVal S22) S22 {
	if val, ok := _S22Code2IDMap[code]; ok {
		return val
	}
	return dftVal
}
